콜렉션(Collection)
팁 mutable, Immutable
- 기본적으로 불변한 immutable을 사용하는 것이 좋다
    -> mutable을 사용하면 변경된 값을 확인해야 하기 때문에
- 리스트 -> (10, 20, 30)
- 코드 500줄
- 리스트

- 변경가능 여부
    - Mutable -> 변경가능
    - Immutable -> 불변
- 특징으로 분리
    - List
        - Mutable, Immutable
    - Set
        - Mutable, Immutable
    - Map
        - Mutable, Immutable

- 콜렉션은 전부다 크기가 고정되어 있지 않다

1. List
    1)immutable
    - 형태
        - listOf<자료형>(값1, 값2, 값3)
        - val numbers = listOf<Int>(1,2,3)
    2)mutable
    - 형태
        - mutableListOf<자료형>(값1, 값2, 값3)
        - val numbers = mutableListOf<Int>(1,2,3)

2. Set
    - 집합 -> 똑같은 값을 허락하지 않는다
    1)immutable
    - 형태
        - setOf<자료형> (값1, 값2, 값3, 값1, 값1) -> setOf<자료형> (값1, 값2, 값3)
            -> 같은 값이 있으면 하나만 저장함
    2)mutable
    - 형태
        - mutableSetOf<자료형>(값1, 값2, 값3, 값1, 값1)

3. Map
    - 키-벨류(key-value) -> 저장 방
    1)immutable
    - 형태
        - mapOf<key의자료형, value의자료형>(키1 to 벨류1, 키2 to 벨류2...)
        - var numbers = mapOf<String, String>("1" to "일", "2" to "이")
    2)mutable
    - 형태
        - immutableMa pOf<자료형, 자료형>(키1 to 벨류1, 키2 to 벨류2...)
        - var numbers = immutableMapOf<String, String>("1" to "일", "2" to "이")
